# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  Major: '1'
  Minor: '0'
  Patch: '0'
  imageName: 'pipelines-dotnetcore-docker'
steps:
#- task: NuGetToolInstaller@1

#- task: NuGetCommand@2
#  inputs:
#    restoreSolution: '$(solution)'

#- task: VSBuild@1
#  inputs:
#    solution: '$(solution)'
#    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

# Task to Build Project
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration Release' # Update this to match your need

#- task: NuGetCommand@2
#  inputs:
#    command: pack
#    versioningScheme: byPrereleaseNumber
#    majorVersion: '$(Major)'
#    minorVersion: '$(Minor)'
#    patchVersion: '$(Patch)'
#    packagesToPack: '**/*.csproj'

#- task: NuGetAuthenticate@0
#  displayName: 'NuGet Authenticate'
#- task: NuGetCommand@2
#  displayName: 'NuGet push'
#  inputs:
#    command: push
#    publishVstsFeed: 'pipelines-dotnet-core/testpackage-dotnetcoreproj'
#    allowPackageConflicts: true


- task: Docker@2
  displayName: Build an image
  inputs:
    repository: $(imageName)
    command: build
    Dockerfile: /Dockerfile